{"ast":null,"code":"var _jsxFileName = \"/home/parallels/Documents/React/react-todo-list/src/App.js\",\n  _s = $RefreshSig$();\nimport TodoList from \"./TodoList\";\nimport { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // This returns an array which can be destrructured; the first is the actual array and the second is the function which modifies the array \n  // Use Ref is used to persist values between renders; e.g. the input box \n  const LOCAL_STORAGE_KEY = 'todoApp.todos';\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {});\n\n  // This is another funtion which allows us to perform side effects on the functional components; only triggered when something in the array is changed\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  // This function will be called whenever the button is clicked \n  function handleOnClick(e) {\n    let name = todoNameRef.current.value;\n    if (name === '') {\n      return;\n    } else {\n      setTodos(prevTodos => {\n        return [...prevTodos, {\n          id: uuidv4(),\n          name: name,\n          complete: false\n        }];\n      });\n    }\n    todoNameRef.current.value = null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: todoNameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnClick,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"0 Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoList","useState","useRef","useEffect","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","LOCAL_STORAGE_KEY","todos","setTodos","todoNameRef","localStorage","setItem","JSON","stringify","handleOnClick","e","name","current","value","prevTodos","id","complete","children","todoList","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onClick","_c","$RefreshReg$"],"sources":["/home/parallels/Documents/React/react-todo-list/src/App.js"],"sourcesContent":["import TodoList from \"./TodoList\";\nimport { useState, useRef, useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  // This returns an array which can be destrructured; the first is the actual array and the second is the function which modifies the array \n  // Use Ref is used to persist values between renders; e.g. the input box \n  const LOCAL_STORAGE_KEY = 'todoApp.todos'\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n\n  })\n\n  // This is another funtion which allows us to perform side effects on the functional components; only triggered when something in the array is changed\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  // This function will be called whenever the button is clicked \n  function handleOnClick(e) {\n    let name = todoNameRef.current.value\n\n    if (name === '') {\n      return\n    } else {\n      setTodos(prevTodos => {\n        return [...prevTodos, { id: uuidv4(), name: name, complete: false }]\n      })\n    }\n\n    todoNameRef.current.value = null\n  }\n\n  return (\n    <>\n      {/* Sending the totos prop to the Todos function; this then renders the list on the page */}\n      <TodoList todoList={todos} />\n\n      {/* The input from the text type will be held in todoNameRef */}\n      <input type='text' ref={todoNameRef}></input>\n      <button onClick={handleOnClick}>Add Todo</button>\n      <button>Clear Todo</button>\n      <div>0 Left</div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAMC,iBAAiB,GAAG,eAAe;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,WAAW,GAAGb,MAAM,EAAE;EAE5BC,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;;EAEF;EACAA,SAAS,CAAC,MAAM;IACda,YAAY,CAACC,OAAO,CAACL,iBAAiB,EAAEM,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,CAAC;EAChE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,SAASO,aAAaA,CAACC,CAAC,EAAE;IACxB,IAAIC,IAAI,GAAGP,WAAW,CAACQ,OAAO,CAACC,KAAK;IAEpC,IAAIF,IAAI,KAAK,EAAE,EAAE;MACf;IACF,CAAC,MAAM;MACLR,QAAQ,CAACW,SAAS,IAAI;QACpB,OAAO,CAAC,GAAGA,SAAS,EAAE;UAAEC,EAAE,EAAErB,MAAM,EAAE;UAAEiB,IAAI,EAAEA,IAAI;UAAEK,QAAQ,EAAE;QAAM,CAAC,CAAC;MACtE,CAAC,CAAC;IACJ;IAEAZ,WAAW,CAACQ,OAAO,CAACC,KAAK,GAAG,IAAI;EAClC;EAEA,oBACEjB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBAEErB,OAAA,CAACP,QAAQ;MAAC6B,QAAQ,EAAEhB;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAG7B1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,GAAG,EAAEpB;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC7C1B,OAAA;MAAQ6B,OAAO,EAAEhB,aAAc;MAAAQ,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACjD1B,OAAA;MAAAqB,QAAA,EAAQ;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC3B1B,OAAA;MAAAqB,QAAA,EAAK;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA,gBAChB;AAEP;AAACtB,EAAA,CA3CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}